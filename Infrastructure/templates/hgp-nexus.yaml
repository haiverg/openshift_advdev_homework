apiVersion: template.openshift.io/v1
kind: Template
labels:
  app: ${NEXUS_APP_NAME} 
  template: ${NEXUS_APP_NAME}-template
metadata:
  name: hgp-nexus
objects:
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    annotations:
      template.alpha.openshift.io/wait-for-ready: "true"
    labels:
      app: ${NEXUS_APP_NAME}
      template: ${NEXUS_APP_NAME}-template
    name: ${NEXUS_SERVICE_NAME}
  spec:
    replicas: 1
    selector:
      name: ${NEXUS_SERVICE_NAME}
    strategy:
      recreateParams:
        timeoutSeconds: 600
        post:
          failurePolicy: Abort
          execNewPod:
            containerName: nexus3
            command:
              - "/bin/bash"
              - "-c"
              - "curl -s https://raw.githubusercontent.com/wkulhanek/ocp_advanced_development_resources/master/nexus/setup_nexus3.sh | bash -s admin admin123 http://${NEXUS_SERVICE_NAME}:8081"
      paused: false         
      type: Recreate
    template:
      metadata:
        labels:
          name: ${NEXUS_SERVICE_NAME}
      spec:
        containers:
        - image: sonatype/nexus3:latest
          imagePullPolicy: Always
          livenessProbe:
            exec:
              command:
              - echo
              - ok
            failureThreshold: 3
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: nexus3
          ports:
          - containerPort: 8081
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /repository/maven-public/
              port: 8081
              scheme: HTTP
            initialDelaySeconds: 120
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: ${NEXUS_CPU_LIM}
              memory: ${NEXUS_MEMORY_LIM}
            requests:
              cpu: ${NEXUS_CPU_REQ}
              memory: ${NEXUS_MEMORY_REQ} 
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /nexus-data
            name: nexus3-volume-1
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: nexus3-volume-1
          persistentVolumeClaim:
            claimName: nexus-pvc
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - nexus3
        from:
          kind: ImageStreamTag
          name: nexus3:latest
      type: ImageChange
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    annotations:
      console.alpha.openshift.io/overview-app-route: "false"
    labels:
      app: ${NEXUS_APP_NAME}
      template: ${NEXUS_APP_NAME}-template
    name: ${NEXUS_SERVICE_NAME}-registry
  spec:
    tls:
      termination: edge
    to:
      kind: Service
      name: ${NEXUS_SERVICE_NAME}-registry
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    annotations:
      console.alpha.openshift.io/overview-app-route: "true"
    labels:
      app: ${NEXUS_APP_NAME}
      template: ${NEXUS_APP_NAME}-template
    name: ${NEXUS_SERVICE_NAME}
  spec:
    to:
      kind: Service
      name: ${NEXUS_SERVICE_NAME}
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    labels:
      app: ${NEXUS_APP_NAME}
      template: ${NEXUS_APP_NAME}-template
    name: nexus3
  spec:
    tags:
    - from:
        kind: DockerImage
        name: docker.io/sonatype/nexus3:latest
      name: latest
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: ${NEXUS_APP_NAME}
      template: ${NEXUS_APP_NAME}-template
    name: ${NEXUS_SERVICE_NAME}-registry
  spec:
    ports:
    - port: 5000
      protocol: TCP
      targetPort: 5000
    selector:
      name: ${NEXUS_SERVICE_NAME}
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: ${NEXUS_APP_NAME}
      template: ${NEXUS_APP_NAME}-template
    name: ${NEXUS_SERVICE_NAME}
  spec:
    ports:
    - name: 8081-tcp
      port: 8081
      protocol: TCP
      targetPort: 8081
    selector:
      name: ${NEXUS_SERVICE_NAME}
    sessionAffinity: None
    type: ClusterIP
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    labels:
      app: ${NEXUS_APP_NAME}
      template: ${NEXUS_APP_NAME}-template
    name: nexus-pvc
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: ${NEXUS_STORAGE_SIZE}
  status: {}
parameters:
- name: NEXUS_APP_NAME
  value: hgp-nexus
  displayName: Nexus App Name
  description: The name of Nexus Aplication.        
- name: NEXUS_SERVICE_NAME
  value: nexus3
  displayName: Nexus Service Name
  description: The name of Nexus Service.
- name: NEXUS_MEMORY_REQ
  value: 1Gi
  displayName: Mininum Nexus Request Memory
  description: Minimum amount of memory for nexus container.
- name: NEXUS_MEMORY_LIM
  value: 2Gi
  displayName: Maximum Nexus Limit Memory
  description: Maximum amount of memory for nexus container.
- name: NEXUS_CPU_REQ
  value: 500m
  displayName: Mininum Nexus Request CPU
  description: Minimum amount of CPU for nexus container.
- name: NEXUS_CPU_LIM
  value: "2"
  displayName: Maximum Nexus CPU Limit
  description: Maximum amount of CPU for nexus container.  
- name: NEXUS_STORAGE_SIZE
  value: 4Gi
  displayName: Nexus storage size
  description: Volume space available for data.  
