apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: hgp-jenkins
labels:
  app: ${JENKINS_APP_NAME} 
  template: ${JENKINS_APP_NAME}-template
objects:
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    annotations:
      template.alpha.openshift.io/wait-for-ready: "true"
    labels:
      app: ${JENKINS_APP_NAME}
      template: ${JENKINS_APP_NAME}-template
    name: ${JENKINS_SERVICE_NAME}
  spec:
    replicas: 1
    selector:
      name: ${JENKINS_SERVICE_NAME}
    strategy:
      recreateParams:
        timeoutSeconds: 600
      type: Recreate
    template:
      metadata:
        labels:
          name: ${JENKINS_SERVICE_NAME}
      spec:
        containers:
        - env:
          - name: OPENSHIFT_ENABLE_OAUTH
            value: ${ENABLE_OAUTH}
          - name: OPENSHIFT_ENABLE_REDIRECT_PROMPT
            value: "true"
          - name: DISABLE_ADMINISTRATIVE_MONITORS
            value: "true"
          - name: KUBERNETES_MASTER
            value: https://kubernetes.default:443
          - name: KUBERNETES_TRUST_CERTIFICATES
            value: "true"
          - name: JENKINS_SERVICE_NAME
            value: ${JENKINS_SERVICE_NAME}
          - name: JNLP_SERVICE_NAME
            value: ${JNLP_SERVICE_NAME}
          - name: ENABLE_FATAL_ERROR_LOG_FILE
            value: "false"
            image: jenkins:latest
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /login
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 420
            periodSeconds: 360
            successThreshold: 1
            timeoutSeconds: 240
          name: jenkins
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /login
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 120
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 600
          resources:
            limits:
              cpu: ${CPU_LIM}
              memory: ${MEMORY_LIMIT}
            requests:
              cpu: ${CPU_REQ}
              memory: ${MEMORY_REQ}
          securityContext:
            capabilities: {}
            privileged: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/jenkins
            name: jenkins-data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: ${JENKINS_SERVICE_NAME}
        serviceAccountName: ${JENKINS_SERVICE_NAME}
        volumes:
        - name: jenkins-data
          persistentVolumeClaim:
            claimName: ${JENKINS_SERVICE_NAME}
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - jenkins
        from:
          kind: ImageStreamTag
          name: ${JENKINS_IMAGE_STREAM_TAG}
          namespace: ${NAMESPACE}
        lastTriggeredImage: ""
      type: ImageChange
    - type: ConfigChange
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    annotations:
      haproxy.router.openshift.io/timeout: 4m
      template.openshift.io/expose-uri: http://{.spec.host}{.spec.path}
    labels:
      app: ${JENKINS_APP_NAME}
      template: ${JENKINS_APP_NAME}-template
    name: ${JENKINS_SERVICE_NAME}
  spec:
    tls:
      insecureEdgeTerminationPolicy: Redirect
      termination: edge
    to:
      kind: Service
      name: ${JENKINS_SERVICE_NAME}
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    labels:
      app: ${JENKINS_APP_NAME}
      template: ${JENKINS_APP_NAME}-template
      build: jenkins-slave-appdev
    name: jenkins-slave-appdev
  spec:
    lookupPolicy:
      local: false
    tags:
    - annotations: null
      from:
        kind: DockerImage
        name: docker-registry.default.svc:5000/hgp-jenkins/jenkins-slave-appdev:latest
      generation: null
      importPolicy: {}
      name: latest
      referencePolicy:
        type: ""
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    labels:
      app: ${JENKINS_APP_NAME}
      template: ${JENKINS_APP_NAME}-template
      build: jenkins-slave-appdev
    name: jenkins-slave-maven-centos7
  spec:
    lookupPolicy:
      local: false
    tags:
    - annotations:
        openshift.io/imported-from: docker.io/openshift/jenkins-slave-maven-centos7:v3.9
      from:
        kind: DockerImage
        name: docker.io/openshift/jenkins-slave-maven-centos7:v3.9 
      generation: 2
      importPolicy: {}
      name: v3.9
      referencePolicy:
        type: Source
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      service.alpha.openshift.io/dependencies: '[{"name": "${JNLP_SERVICE_NAME}", "namespace":
        "", "kind": "Service"}]'
      service.openshift.io/infrastructure: "true"
    labels:
      app: ${JENKINS_APP_NAME}
      template: ${JENKINS_APP_NAME}-template
    name: ${JENKINS_SERVICE_NAME} 
  spec:
    ports:
    - name: web
      port: 80
      protocol: TCP
      targetPort: 8080
    selector:
      name: ${JENKINS_SERVICE_NAME} 
    sessionAffinity: None
    type: ClusterIP
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: ${JENKINS_APP_NAME}
      template: ${JENKINS_APP_NAME}-template
    name: ${JNLP_SERVICE_NAME}
  spec:
    ports:
    - name: agent
      port: 50000
      protocol: TCP
      targetPort: 50000
    selector:
      name: ${JENKINS_SERVICE_NAME}
    sessionAffinity: None
    type: ClusterIP
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    labels:
      app: ${JENKINS_APP_NAME}
      template: ${JENKINS_APP_NAME}-template
    name: ${JENKINS_SERVICE_NAME}
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: ${VOLUME_CAPACITY}
- apiVersion: build.openshift.io/v1
  kind: BuildConfig
  metadata:
    labels:
      app: ${JENKINS_APP_NAME}
      template: ${JENKINS_APP_NAME}-template
      build: jenkins-slave-appdev
    name: jenkins-slave-appdev
  spec:
    failedBuildsHistoryLimit: 5
    nodeSelector: null
    output:
      to:
        kind: ImageStreamTag
        name: jenkins-slave-appdev:latest
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      dockerfile: |-
        FROM docker.io/openshift/jenkins-slave-maven-centos7:v3.9
        USER root
        RUN yum -y install skopeo && yum clean all
        USER 1001
      type: Dockerfile
    strategy:
      dockerStrategy:
        from:
          kind: ImageStreamTag
          name: jenkins-slave-maven-centos7:v3.9
      type: Docker
    successfulBuildsHistoryLimit: 5
    triggers:
    - github:
        secret: tAfwhjaWuXx_WpZuZJG4
      type: GitHub
    - generic:
        secret: v93dYOhi9x_SJNefg7hE
      type: Generic
    - type: ConfigChange
    - imageChange: {}
      type: ImageChange
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    annotations:
      serviceaccounts.openshift.io/oauth-redirectreference.jenkins: '{"kind":"OAuthRedirectReference","apiVersion":"v1","reference":{"kind":"Route","name":"${JENKINS_SERVICE_NAME}"}}'
    name: ${JENKINS_SERVICE_NAME}
- apiVersion: authorization.openshift.io/v1
  groupNames: null
  kind: RoleBinding
  metadata:
    name: ${JENKINS_SERVICE_NAME}_edit
  roleRef:
    name: edit
  subjects:
  - kind: ServiceAccount
    name: ${JENKINS_SERVICE_NAME}
parameters:
- name: JENKINS_APP_NAME
  value: hgp-jenkins
  displayName: Jenkins App Name
  description: The name of Jenkins Aplication. 
- description: The name of the OpenShift Service exposed for the Jenkins container.
  displayName: Jenkins Service Name
  name: JENKINS_SERVICE_NAME
  value: jenkins
- description: The name of the service used for master/slave communication.
  displayName: Jenkins JNLP Service Name
  name: JNLP_SERVICE_NAME
  value: jenkins-jnlp
- description: Whether to enable OAuth OpenShift integration. If false, the static
    account 'admin' will be initialized with the password 'password'.
  displayName: Enable OAuth in Jenkins
  name: ENABLE_OAUTH
  value: "true"
- name: CPU_REQ
  value: "1"
  displayName: Minimum Jenkins CPU
  description: Minimum amount of CPU for jenkins container.
- name: CPU_LIM
  value: "2"
  displayName: Maximum Jenkins CPU
  description: Maximum amount of CPU for jenkins container.
- description: Minimum amount of memory the container can use.
  displayName: Memory Request
  name: MEMORY_REQ
  value: 1Gi
- description: Maximum amount of memory the container can use.
  displayName: Memory Limit
  name: MEMORY_LIMIT
  value: 2Gi
- description: Volume space available for data, e.g. 512Mi, 2Gi.
  displayName: Volume Capacity
  name: VOLUME_CAPACITY
  required: true
  value: 4Gi
- description: The OpenShift Namespace where the Jenkins ImageStream resides.
  displayName: Jenkins ImageStream Namespace
  name: NAMESPACE
  value: openshift
- description: Name of the ImageStreamTag to be used for the Jenkins image.
  displayName: Jenkins ImageStreamTag
  name: JENKINS_IMAGE_STREAM_TAG
  value: jenkins:2
